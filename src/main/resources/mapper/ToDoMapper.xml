<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fodala.mapper.ToDoMapper">

    <sql id="Base_Column_List">
        id, title, status, description, completed, start, end, schedule, important, created, username
    </sql>

    <select id="all" resultType="ToDo">
        select
        <include refid="Base_Column_List"/>
        from todo
    </select>

    <select id="filter" parameterType="map" resultType="ToDo">
        select
        <include refid="Base_Column_List"/>
        from todo
        <where>
            1 = 1
            <if test=" map.important != null ">
                AND important = #{map.important}
            </if>
            <if test="map.completed != null">
                AND completed = #{map.completed}
            </if>
            <if test="map.startDate != null">
                AND start_date &gt;= #{map.startDate}
            </if>
            <if test="map.endDate != null">
                AND end_date &lt; #{map.endDate}
            </if>
        </where>
    </select>

    <select id="findById" resultType="ToDo">
        select
        <include refid="Base_Column_List"/>
        from todo
        where `id` = #{id}
    </select>

    <select id="findByDate" resultType="ToDo">
        select
        <include refid="Base_Column_List"/>
        from todo
        where `start` BETWEEN #{start} AND #{end}
    </select>

    <select id="search" resultType="ToDo">
        <!--        <bind name="pattern" value="'%' + _parameter.getSearch() + '%'" />-->
        select
        <include refid="Base_Column_List"/>
        from todo
        where `title` like #{search}
    </select>

    <insert id="insert">
        insert into todo (`title`, `status`, `description`, `completed`, `start`, `end`, `schedule`, `important`,
        `created`)
        values (#{toDo.title}, #{toDo.status}, #{toDo.description}, #{toDo.completed}, #{toDo.start}, #{toDo.end},
        #{toDo.schedule},
        #{toDo.important}, #{toDo.created})
        <selectKey keyProperty="id" resultType="int">
            select last_insert_rowid() as id
        </selectKey>
    </insert>

    <update id="important">
        update todo
        set `important` = (1 - `important`)
        where `id` = #{id}
    </update>

    <update id="completed">
        update todo
        set `completed` = (1 - `completed`),
        `end` = IIF(1 - `completed`, strftime('%Y-%m-%dT%H:%M:%S','now'), '')
        where `id` = #{id}
    </update>

    <update id="update">
        update todo set
        `title` = #{toDo.title}
        <if test="toDo.status != null">
            , `status` = #{toDo.status}
        </if>
        <if test="toDo.description != null">
            , `description` = #{toDo.description}
        </if>
        <if test="toDo.completed != null">
            , `completed` = #{toDo.completed}
        </if>
        <if test="toDo.start != null">
            , `start` = #{toDo.start}
        </if>
        <if test="toDo.end != null">
            , `end` = #{toDo.end}
        </if>
        <if test="toDo.schedule != null">
            , `schedule` = #{toDo.schedule}
        </if>
        <if test="toDo.important != null">
            , `important` = #{toDo.important}
        </if>
        where `id` = #{toDo.id}
    </update>

    <delete id="delete">
        delete
        from todo
        where `id` = #{id}
    </delete>

    <select id="history" resultType="ToDoHistory">
        select `id`, `todo_id`, `title`, `status`, `description`, `completed`,
        `start`, `end`, `schedule`, `important`, `created`, `updated`
        from todo_history
        where `todo_id` = #{id}
        order by `updated` desc
    </select>

    <select id="count" resultType="map">
        select (select count(*) from todo) as tasks,
        (select count(*) from todo where important = 1) as important,
        (select count(*) from todo where completed = 1) as completed,
        (select count(*) from todo where start BETWEEN strftime('%Y-%m-%d','now') AND strftime('%Y-%m-%d', 'now', '+1
        day')) as myday,
        (select count(*) from todo where start BETWEEN strftime('%Y-%m-%d','now') AND strftime('%Y-%m-%d', 'now', '+100
        year')) as planned
    </select>

    <select id="notifications" resultType="map">
        select * from todo_history order by updated desc
    </select>

    <select id="listNames" resultType="map">
        select id, name from list order by created desc
    </select>

    <select id="list" resultType="ToDo">
        select
        <include refid="Base_Column_List"/>
        from todo
        where id in
        (select todo_id from list_item where
        list_id in (select id from list where name = #{name}))
    </select>

    <select id="createList" resultType="string">
        insert into list(name) VALUES (#{list});
    </select>
</mapper>
